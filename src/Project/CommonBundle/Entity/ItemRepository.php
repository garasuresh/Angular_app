<?php

namespace Project\CommonBundle\Entity;

use Doctrine\ORM\Query;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
/**
 * ItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItemRepository extends EntityRepository
{
    function findAllData()
    {
        $query = $this->createQueryBuilder('q')->getQuery();
        $query->setHint(Query::HINT_INCLUDE_META_COLUMNS, true);
        return $query->getArrayResult();
    }

    /**
     * Finds only one result for an id.
     *
     * @param $id
     *
     * @return array|null $result result is usually an array of key value pairs with value containing data
     */
    function findOneData($id)
    {
        $query = $this->createQueryBuilder('q')
            ->where('q.id = :id')
            ->setParameter('id', $id)
            ->getQuery();

        try {
            $result = $query->getSingleResult();
        } catch(NoResultException $e) {
            $result = null;
        }
        return $result;
    }

    /**
     * Finds results for an id.
     *
     * @param $id
     *
     * @return array|null $result result is usually an array of arrays
     */
    function findData($id)
    {
        $query = $this->createQueryBuilder('q')
            ->where('q.id = :id')
            ->setParameter('id', $id)
            ->getQuery();
        try {
            $result = $query->getArrayResult();
        } catch(NoResultException $e) {
            $result = null;
        }
        return $result;
    }
}
